From a4886704e0739d6206f775a6b41aa1144dc7db45 Mon Sep 17 00:00:00 2001
From: Brenden Tisler <btisler@emacinc.com>
Date: Thu, 6 Jul 2023 19:07:14 -0500
Subject: [PATCH] som 5728 changes

Signed-off-by: Brenden Tisler <btisler@emacinc.com>
---
 arch/arm/dts/emac-som-5728m.dtsi   |  38 +++----
 board/emacinc/som-5728m/board.c    |  62 +++++++---
 board/emacinc/som-5728m/mux_data.h |   1 +
 configs/emac-som-5728m_defconfig   | 176 +++++++++--------------------
 4 files changed, 114 insertions(+), 163 deletions(-)

diff --git a/arch/arm/dts/emac-som-5728m.dtsi b/arch/arm/dts/emac-som-5728m.dtsi
index 4952a6336c..d074b368d6 100644
--- a/arch/arm/dts/emac-som-5728m.dtsi
+++ b/arch/arm/dts/emac-som-5728m.dtsi
@@ -449,35 +449,25 @@
 	dr_mode = "host";
 };
 
-&mac{
-	slaves = <1>;
-	status = "okay";
-};
-
 &davinci_mdio {
-    ethphy4: ethernet-phy@4 {
+	reset-gpios = <&gpio4 25 GPIO_ACTIVE_LOW>;
+	reset-delay-us = <2>;
+
+	phy0: ethernet-phy@1 {
 		reg = <4>;
-		qca,clk-out-frequency = <50000000>;
-		qca,keep-pll-enabled;
-		vddio-supply = <&vddio>;
-		reset-gpios = <&gpio4 25 GPIO_ACTIVE_LOW>;
-    	reset-assert-us = <500000>;
-		reset-deassert-us = <500000>;
-
-		vddio: vddio-regulator {
-			regulator-min-microvolt = <1500000>;
-			regulator-max-microvolt = <1500000>;
-		};
-    };
+		eee-broken-100tx;
+		eee-broken-1000t;
+	};
 };
 
-&cpsw_emac0 {
-    phy-handle = <&ethphy4>;
-    phy-mode = "rgmii";
-	ti,dual-emac-pvid = <1>;
+&mac {
+	slaves = <1>;
+	status = "okay";
 };
-&cpsw_emac1 {
-    status = "disabled";
+
+&cpsw_emac0 {
+	phy-handle = <&phy0>;
+	phy-mode = "rgmii";
 };
 
 &usb2_phy1 {
diff --git a/board/emacinc/som-5728m/board.c b/board/emacinc/som-5728m/board.c
index 4540609c38..8f1ae5483f 100644
--- a/board/emacinc/som-5728m/board.c
+++ b/board/emacinc/som-5728m/board.c
@@ -504,34 +504,55 @@ static struct cpsw_slave_data cpsw_slaves[] = {
 static struct cpsw_platform_data cpsw_data = {
 	.mdio_base		= CPSW_MDIO_BASE,
 	.cpsw_base		= CPSW_BASE,
-	.mdio_div		= 0xff,
+	.mdio_div		= CPSW_MDIO_DIV,
 	.channels		= 8,
-	.cpdma_reg_ofs		= 0x800,
+	.cpdma_reg_ofs		= CPSW_CPDMA_OFFSET,
 	.slaves			= 1,
 	.slave_data		= cpsw_slaves,
-	.ale_reg_ofs		= 0xd00,
+	.ale_reg_ofs		= CPSW_ALE_OFFSET,
 	.ale_entries		= 1024,
-	.host_port_reg_ofs	= 0x108,
-	.hw_stats_reg_ofs	= 0x900,
-	.bd_ram_ofs		= 0x2000,
+	.host_port_reg_ofs	= CPSW_HOST_PORT_OFFSET,
+	.hw_stats_reg_ofs	= CPSW_HW_STATS,
+	.bd_ram_ofs		= CPSW_BD_OFFSET,
 	.mac_control		= (1 << 5),
 	.control		= cpsw_control,
 	.host_port_num		= 0,
 	.version		= CPSW_CTRL_VERSION_2,
 };
 
+static int ar8031_phy_fixup(struct phy_device *phydev)
+{
+	unsigned short val;
+
+	/* To enable AR8031 ouput a 125MHz clk from CLK_25M */
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xd, 0x7);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xe, 0x8016);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xd, 0x4007);
+
+	val = phy_read(phydev, MDIO_DEVAD_NONE, 0xe);
+	val &= 0xffe3;
+	val |= 0x18;
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xe, val);
+
+	/* introduce tx clock delay */
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x5);
+	val = phy_read(phydev, MDIO_DEVAD_NONE, 0x1e);
+	val |= 0x0100;
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, val);
+
+	return 0;
+}
+
 int board_phy_config(struct phy_device *phydev)
 {
-#define GPIO_PHY_RST GPIO_TO_PIN(4, 25)
-	int ret = 0;
-	if (phydev->drv->config)
-		ret = phydev->drv->config(phydev);
-	gpio_request(GPIO_PHY_RST, "phy_rst");
-	gpio_direction_output(GPIO_PHY_RST, 0);
-	udelay(500*1000);
-	gpio_direction_output(GPIO_PHY_RST, 1);
-	udelay(500*1000);
-	return ret;
+	ar8031_phy_fixup(phydev);
+
+	if (phydev->drv->config){
+		printf("%s conf", phydev->drv->name);
+		phydev->drv->config(phydev);
+	};
+
+	return 0;
 }
 
 static u64 mac_to_u64(u8 mac[6])
@@ -589,6 +610,8 @@ int board_eth_init(struct bd_info *bis)
 	ctrl_val |= 0x22;
 	writel(ctrl_val, (*ctrl)->control_core_control_io1);
 
+	cpsw_data.slave_data[0].phy_addr = 4;
+
 	ret = cpsw_register(&cpsw_data);
 	if (ret < 0)
 		printf("Error %d registering CPSW switch\n", ret);
@@ -611,6 +634,13 @@ static inline void status_led_enable(void)
 int board_early_init_f(void)
 {
 	status_led_enable();
+#define GPIO_PHY_RST GPIO_TO_PIN(4, 25)
+
+	gpio_request(GPIO_PHY_RST, "phy_rst");
+	gpio_direction_output(GPIO_PHY_RST, 0);
+	udelay(100000);
+	gpio_direction_output(GPIO_PHY_RST, 1);
+	udelay(500000);
 	return 0;
 }
 #endif
diff --git a/board/emacinc/som-5728m/mux_data.h b/board/emacinc/som-5728m/mux_data.h
index cbe2f5630a..ba4e4e9795 100644
--- a/board/emacinc/som-5728m/mux_data.h
+++ b/board/emacinc/som-5728m/mux_data.h
@@ -62,6 +62,7 @@ const struct pad_conf_entry core_padconf_array_essential_som_5728m[] = {
 	{VIN2A_D15, 0x5000A}, /* C4 vin2a_d15.eQEP3_index */
 	{VIN2A_D10, 0x10003}, /* D3 vin2a_d10.mdio_mclk */
 	{VIN2A_D11, 0x10003}, /* F6 vin2a_d11.mdio_d */
+	{RMII_MHZ_50_CLK, (M14 | PIN_INPUT_PULLUP)},	/* RMII_MHZ_50_CLK.gpio5_17 */
 	{RGMII0_RXD1, 0x50100}, /* Y2 rgmii0_rxd1.rgmii0_rxd1 */
 	{RGMII0_RXD2, 0x50100}, /* V3 rgmii0_rxd2.rgmii0_rxd2 */
 	{RGMII0_RXD3, 0x50100}, /* V4 rgmii0_rxd3.rgmii0_rxd3 */
