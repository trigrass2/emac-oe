diff --git a/drivers/input/touchscreen/ti_am335x_tsc.c b/drivers/input/touchscreen/ti_am335x_tsc.c
index 83e685557a19..c7369c4463ef 100644
--- a/drivers/input/touchscreen/ti_am335x_tsc.c
+++ b/drivers/input/touchscreen/ti_am335x_tsc.c
@@ -30,6 +30,8 @@
 #include <linux/pm_wakeirq.h>
 
 #include <linux/mfd/ti_am335x_tscadc.h>
+#include <linux/input/touchscreen.h>
+
 
 #define ADCFSM_STEPID		0x10
 #define SEQ_SETTLE		275
@@ -58,6 +60,7 @@ struct titsc {
 	u32			inp_xp, inp_xn, inp_yp, inp_yn;
 	u32			step_mask;
 	u32			charge_delay;
+	struct touchscreen_properties prop;
 };
 
 static unsigned int titsc_readl(struct titsc *ts, unsigned int reg)
@@ -319,8 +322,9 @@ static irqreturn_t titsc_irq(int irq, void *dev)
 			z = (z + 2047) >> 12;
 
 			if (z <= MAX_12BIT) {
-				input_report_abs(input_dev, ABS_X, x);
-				input_report_abs(input_dev, ABS_Y, y);
+				// input_report_abs(input_dev, ABS_X, x);
+				// input_report_abs(input_dev, ABS_Y, y);
+				touchscreen_report_pos(ts_dev->input, &ts_dev->prop, x, y, false);
 				input_report_abs(input_dev, ABS_PRESSURE, z);
 				input_report_key(input_dev, BTN_TOUCH, 1);
 				input_sync(input_dev);
@@ -465,7 +469,7 @@ static int titsc_probe(struct platform_device *pdev)
 	input_set_abs_params(input_dev, ABS_X, 0, MAX_12BIT, 0, 0);
 	input_set_abs_params(input_dev, ABS_Y, 0, MAX_12BIT, 0, 0);
 	input_set_abs_params(input_dev, ABS_PRESSURE, 0, MAX_12BIT, 0, 0);
-
+	touchscreen_parse_properties(input_dev, false, &ts_dev->prop);
 	/* register to the input system */
 	err = input_register_device(input_dev);
 	if (err)
