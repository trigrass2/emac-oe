/*
 * som-a5d36-bare.dtsi - Device Tree include file for the SOM-A5D36.
 *
 * Copyright (C) 2023 EMAC Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#include "sama5d35.dtsi"
#include <dt-bindings/gpio/gpio.h>

#define LEGACY_SPI_FLASH_CS 	13
#define CURRENT_SPI_FLASH_CS 	14

/ {
	model = "EMAC SOM-A5D35";
	compatible = "emac,soma5d35", "atmel,sama5d35", "atmel,sama5d3", "atmel,sama5";

	chosen {
		stdout-path = &dbgu;
	};

	// 512 MB RAM
	memory@20000000 {
		reg = <0x20000000 0x20000000>;
	};

	clocks {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		slow_xtal {
			clock-frequency = <32768>;
		};

		main_xtal {
			clock-frequency = <12000000>;
		};
	};

	leds {
		compatible = "gpio-leds";
		status {
			label = "status";
			gpios = <&pioA 26 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_1v8_vdd_ddr1: reg_1v8_vdd_ddr1 {
			compatible = "regulator-fixed";
			regulator-name = "1V8_VDD_DDR1";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
			vin-supply = <&rail_3v3_vcc>;
		};
		reg_1v2_vcc: reg_1v2_vcc {
			compatible = "regulator-fixed";
			regulator-name = "1V2_VCC";
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1200000>;
			regulator-always-on;
			vin-supply = <&rail_3v3_vcc>;
		};
		rail_3v3_vcc: rail_3v3_vcc {
			compatible = "regulator-fixed";
			regulator-name = "3V3_VCC";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
		rail_3v3_stby: rail_3v3_stby {
			compatible = "regulator-fixed";
			regulator-name = "3V3_STBY";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
	};

	gpio_watchdog: watchdog {
		/* MAX6747 */
		compatible = "linux,wdt-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_watchdog>;
		gpios = <&pioA 23 GPIO_ACTIVE_LOW>;
		hw_algo = "level";
		hw_margin_ms = <1000>;
		status = "disabled";
	};
};

&{/ahb/apb/pinctrl@fffff200} {
	watchdog {
		pinctrl_watchdog: pinctrl_watchdog {
			atmel,pins =
				<AT91_PIOA 23 AT91_PERIPH_GPIO AT91_PINCTRL_PULL_UP>;
		};
	};
	usba {
		pinctrl_usba_vbus: pinctrl_usba_vbus {
			atmel,pins =
				<AT91_PIOD 30 AT91_PERIPH_GPIO AT91_PINCTRL_DEGLITCH>;
		};
	};
	spi0 {
		pinctrl_spi0_cs0: spi0-cs0-0 {
			atmel,pins =
				<AT91_PIOD LEGACY_SPI_FLASH_CS AT91_PERIPH_GPIO AT91_PINCTRL_NONE>;
		};
	};
};

&pioA {
	gpio_watchdog_en: watchdog-enable {
		gpio-hog;
		gpios = <24 GPIO_ACTIVE_LOW>;
		output-high;
		/* LOW - enabled , HIGH - disabled */
		line-name = "watchdog-enable";
	};
};

&pioC {
	macb1_clk_en: macb1_clk_en {
		gpio-hog;
		gpios = <10 GPIO_ACTIVE_LOW>;
		output-high;
		line-name = "macb1-clk-en";
	};
};

&macb1 {
	phy-handle = <&ethphy1>;
	phy-mode = "rmii";
	status = "disabled";
	#address-cells = <1>;
	#size-cells = <0>;
	ethphy1: ethernet-phy@1 {
		reg = <1>;
	};
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_mmc0_clk_cmd_dat0 &pinctrl_mmc0_dat1_3>;
	status = "okay";
	slot@0 {
		reg = <0>;
		bus-width = <4>;
		non-removable;
		no-1-8-v;
	};
};

&i2c0 {
	status = "disabled";
	clock-frequency = <400000>;
	
	eeprom: atmel@50 {
		compatible = "atmel,24c02";
		reg = <0x50>;
		status = "disabled";
	};
};

&spi0 {
	dmas = <0>, <0>;	/*  Do not use DMA for spi0 */
	num-cs = <1>;
	pinctrl-0 = <&pinctrl_spi0 &pinctrl_spi0_cs0>;
	cs-gpios = <&pioD LEGACY_SPI_FLASH_CS 0>;
	status = "okay";
	boot_flash: m25p80@0 {
		compatible = "jedec,spi-nor";
		spi-max-frequency = <50000000>;
		reg = <0>;
	};
};

&usb0 {
	atmel,vbus-gpio = <&pioD 30 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usba_vbus>;
	status = "disabled";
};

&usb1 {
	num-ports = <3>;
	status = "disabled";
};

// Enable Watchdog
&gpio_watchdog {
	status = "okay";
};
&gpio_watchdog_en {
	output-low;
	/* LOW - enabled , HIGH - disabled */
};

// COM B
&dbgu {
	dmas = <0>, <0>;	/*  Do not use DMA for dbgu */
	status = "okay";
};
