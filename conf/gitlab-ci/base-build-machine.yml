.initenv-script: &initenv-script
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - cd repo-tool
  - ./init-build.sh -c
  - ./init-build.sh -g "$REPO_TOOL_GROUPS"
  - cat ${CI_PROJECT_DIR}/conf/bblayers.conf.sample $LAYERS_SAMPLE > ${CI_PROJECT_DIR}/repo-tool/build/${DISTRO_CODENAME}/conf/bblayers.conf
  - |
    export BB_ENV_EXTRAWHITE="$BB_ENV_EXTRAWHITE \
      EMAC_CLIENT_NAME \
      EMAC_IMAGE \
      EMAC_DISPLAY_HW \
      EMAC_DISPLAY \
      EMAC_SHELLMANAGER \
      EMAC_INITMANAGER \
      EMAC_NETWORKMANAGER \
      EMAC_AUDIOMANAGER \
      EMAC_PACKAGEMANAGER"
  - source setup_env.sh
  - env | uniq | sort

.build-recipe:
  variables:
    GIT_STRATEGY: fetch
    BITBAKE_CMD: 'bitbake'
    RECIPE_NAME: $EMAC_IMAGE
  tags:
    - oebuilder
    - bitbake
  timeout: 6hr
  script:
    - *initenv-script
    - $BITBAKE_CMD $RECIPE_NAME

.build-emac-image:
  stage: build
  variables:
    GIT_STRATEGY: fetch
    BITBAKE_CMD: 'bitbake'
    RECIPE_NAME: $EMAC_IMAGE
  tags:
    - oebuilder
    - bitbake
  timeout: 6hr
  script:
    - *initenv-script
    - export DEPLOY_DIR="$($BITBAKE_CMD -e $RECIPE_NAME | grep ^DEPLOY_DIR= | sed 's|=| |g' | awk '{print $2}' | sed 's|\"||g')"
    - $BITBAKE_CMD $RECIPE_NAME
    - test "$INCLUDE_SDK" == "true" && $BITBAKE_CMD -c do_populate_sdk $RECIPE_NAME
    - test "$OE_DEPLOYMENT" == "true" && $BITBAKE_CMD package-index
    - test "$OE_DEPLOYMENT" == "true" && upload_oe
    - test -e ${CI_PROJECT_DIR}/artifacts && unlink ${CI_PROJECT_DIR}/artifacts; 
    - test "$OE_DEPLOYMENT" == "false" && ln -sf ${DEPLOY_DIR}/.. ${CI_PROJECT_DIR}/artifacts

  artifacts:
    paths:
      - artifacts/deploy/image/
      - artifacts/deploy/sdk/



