######################
## INCLUDES
######################
include conf/distro/poky.conf
include conf/distro/include/default-emac-providers.inc
include conf/distro/include/default-emac-versions.inc

######################
## BASIC INFO
######################

IMAGE_LINGUAS = "en-us"
DISTRO = "emac"
DISTRO_NAME = "EMAC OpenEmbedded Linux"
MAINTAINER = "EMAC <support@emacinc.com>"
## DEV set this to jan1 1970 when your hacking on alpha/beta rc[1,2]
RELEASE_DATE = "Oct 21, 2021"
# RELEASE_DATE = "Jan 1, 1970"

MAJOR_DISTRO_VERSION = "6"
MINOR_DISTRO_VERSION = "0"
PATCH_DISTRO_VERSION = "0"

PART_NUMBER ?= "SL0${MAJOR_DISTRO_VERSION}${MINOR_DISTRO_VERSION}-${FS_NUMBER}S0${SOM_NUMBER}A${FILESYSTEM_REV}.tgz"
PART_NUMBER_x86 ?= "SL0${MAJOR_DISTRO_VERSION}${MINOR_DISTRO_VERSION}-${FS_NUMBER}S${MACHINE_NUMBER}X${FILESYSTEM_REV}.tgz"
PART_NUMBER_x86-64 ?= "SM0${MAJOR_DISTRO_VERSION}${MINOR_DISTRO_VERSION}-${FS_NUMBER}S${MACHINE_NUMBER}X${FILESYSTEM_REV}.tgz"

DISTRO_VERSION = "${MAJOR_DISTRO_VERSION}.${MINOR_DISTRO_VERSION}.${PATCH_DISTRO_VERSION}"
DISTRO_RELEASE = "Stable"


######################
## DISTRO BASED FEATURES
######################
## FIXME ADD the following webengine    pcmcia
## x86 arm touchs sound mtd screen can pci rt
DISTRO_FEATURES = " \
    bluez5 \
    bluetooth \
    can \
    gstreamer \
    ipv4 ipv6 \
    ldconfig \
    mtd \
    pam \
    usrmerge \
    usbgadget usbhost \
    wifi \
    ${@bb.utils.contains('EMAC_DISPLAY_HW', 'opengl', ' opengl', '', d )} \
    ${@bb.utils.contains('EMAC_DISPLAY_HW', 'vulkan', ' vulkan', '', d )} \
    ${@bb.utils.contains('EMAC_AUDIOMANAGER', 'alsa', ' alsa', ' ', d )} \
    ${@bb.utils.contains('EMAC_AUDIOMANAGER', 'pulseaudio', ' pulseaudio', ' ', d )} \
    ${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', ' systemd', ' sysvinit', d )} \
    ${@bb.utils.contains('EMAC_DISPLAY', 'linuxfb', ' linuxfb directfb ', '', d )} \
    ${@bb.utils.contains('EMAC_DISPLAY', 'x11', ' x11 xattr', '', d )} \
    ${@bb.utils.contains('EMAC_DISPLAY', 'wayland', ' wayland', '', d )} \
"

DISTRO_FEATURES_DEFAULT_remove = "irda pcmcia pci 3g nfc zeroconf x11 ext2"
DISTRO_FEATURES_remove = " gobject-introspection-data"

######################
## INIT MANAGMENT
######################
INIT_MANAGER = "${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', 'systemd', 'sysvinit', d )}"
VIRTUAL-RUNTIME_init_manager = "${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', 'systemd', 'sysvinit', d )}"
VIRTUAL-RUNTIME_dev_manager = "${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', 'systemd', '', d )}"
VIRTUAL-RUNTIME_initscripts = "${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', 'systemd-compat-units', 'initscripts', d )}"
VIRTUAL-RUNTIME_syslog = "${@bb.utils.contains('EMAC_INITMANAGER', 'systemd', '', 'sysklogd', d )}"
DISTRO_FEATURES_BACKFILL_CONSIDERED_append = "${@bb.utils.contains('EMAC_INITMANAGER','systemd',' sysvinit ',' systemd ', d )}"

######################
## SHELL MANAGEMENT
######################
VIRTUAL-RUNTIME_base-utils = "${@bb.utils.contains('EMAC_SHELLMANAGER', 'busybox', 'busybox', 'coreutils', d )}"
VIRTUAL-RUNTIME_base-utils-hwclock = "${@bb.utils.contains('EMAC_SHELLMANAGER', 'busybox', 'busybox-hwclock', 'util-linux-hwclock', d )}"
VIRTUAL-RUNTIME_base-utils-syslog ="${@bb.utils.contains('EMAC_SHELLMANAGER', 'busybox', 'busybox-syslog', '', d )}"
VIRTUAL-RUNTIME_login_manager = "${@bb.utils.contains('EMAC_SHELLMANAGER', 'busybox', 'busybox', 'shadow-base', d )}"

######################
## PACKAGE MANAGEMENT
######################
VIRTUAL-RUNTIME_update-alternatives = "${@bb.utils.contains('EMAC_PACKAGEMANAGER', 'deb', 'update-alternatives-dpkg', 'update-alternatives-opkg', d )}"

######################
# BACKFILL
######################
DISTRO_FEATURES_BACKFILL_CONSIDERED_append = "gobject-introspection-data "
MACHINE_FEATURES_BACKFILL_CONSIDERED_append = "qemu-usermode"

######################
## SDK
######################
TARGET_VENDOR = "-emac"
SDK_VENDOR = "-emacsdk"
SDK_NAME = "${MACHINE}-${DISTRO}-${SDK_ARCH}-toolchain-${DISTRO_VERSION}-${TUNE_PKGARCH}"
SDK_VERSION = "${MAJOR_DISTRO_VERSION}.${MINOR_DISTRO_VERSION}"
SDKPATH  = "/opt/${DISTRO}/${SDK_VERSION}-${MACHINE}"

SDK_DEPLOY ?= "${TMPDIR}/deploy/sdk/${MACHINE}"


######################
## MISC SETTINGS
######################
TOOLCHAIN_OUTPUTNAME ?= "${SDK_NAME}"
BB_SIGNATURE_HANDLER ?= 'OEBasicHash'
FONTCONFIG_CACHE_DIR = "${libdir}/fontconfig/cache"

######################
## LICENSE_STUFF
######################
LICENSE_CREATE_PACKAGE = "1"
COPY_LIC_MANIFEST = "0"

LICENSE_FLAGS_WHITELIST += " \
    commercial_mpg123 \
    commercial_libav \
    commercial_x264 \
    commercial \
"
ACCEPT_FSL_EULA = "1"
######################
## SANITY CHECKS
######################
PREMIRRORS ??= "\
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

MIRRORS =+ "\
ftp://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n \
http://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n \
https://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n"

CONNECTIVITY_CHECK_URIS ?= " \
     https://eula-downloads.yoctoproject.org/index.php \
     http://bugzilla.yoctoproject.org/report.cgi \
"

SANITY_TESTED_DISTROS ?= " \
    ubuntu-14.04 \n \
    ubuntu-16.04 \n \
    ubuntu-18.04 \n \
    ubuntu-20.04 \n \
    ubuntu-21.04 \n \
    ubuntu-21.10 \n \
    fedora-24 \n \
    fedora-25 \n \
    centos-7 \n \
    debian-8 \n \
    opensuse-42.1 \n \
    opensuse-42.2 \n \
"

######################
## QA
######################
# QA check settings - a little stricter than the OE-Core defaults
WARN_QA = "textrel files-invalid incompatible-license xorg-driver-abi libdir \
           unknown-configure-option"
ERROR_QA = "dev-so debug-deps dev-deps debug-files arch pkgconfig la perms \
            useless-rpaths rpaths staticdev ldflags pkgvarcheck already-stripped \
            compile-host-path dep-cmp installed-vs-shipped install-host-path \
            packages-list perm-config perm-line perm-link pkgv-undefined \
            pn-overrides split-strip var-undefined version-going-backwards"
            

#######################################
## EXTRA INCLUDE PRE MACHINE BASED
## This is optional but really helps
## when dealing with vendor code (nxp,tegra,ect)
#######################################
include conf/distro/include/machine/${MACHINE}.conf    
