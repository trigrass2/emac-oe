# Yocto ADT Installer Configuration File
#
# Copyright 2010-2011 by Intel Corp.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy 
# of this software and associated documentation files (the "Software"), to deal 
# in the Software without restriction, including without limitation the rights 
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in 
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
# THE SOFTWARE.


# Your yocto distro repository, this should include IPKG based packages and root filesystem files where the installation is based on

YOCTOADT_REPO="ftp://oe50opkg:opkgoe50123@ftp.emacinc.com/5.1"

# The following are for system wide setup
# Target architectures that you want to setup host cross dev environment for
# valid values are: arm, x86, x86_64, ppc, mips with space separation between entries
#YOCTOADT_TARGETS="arm x86"
# Whether install qemu or not, valid entries are: Y/N
YOCTOADT_QEMU="Y"
# Whether install user-mode nfs or not, valid entries are: Y/N.  If you want to use Yocto Eclipse plug-in as your dev IDE, you need to select both qemu and NFS
YOCTOADT_NFS_UTIL="Y"

# These 2 values will be supported in the furture installer
#YOCTOADT_BITBAKE="Y"
#YOCTOADT_METADATA="Y"

#Directory variable:
SDK_TARGET_SYSROOT="$HOME/EMAC-SDK/sysroots"

#armv5e architecture
YOCTOADT_ROOTFS_armv5e=""
YOCTOADT_TARGET_SYSROOT_IMAGE_armv5e=""
YOCTOADT_TARGET_MACHINE_armv5e="armv5e"
YOCTOADT_CROSS_CANADIAN_PACKAGEGROUP_armv5e="arm"
YOCTOADT_TARGET_SYSROOT_LOC_armv5e="$SDK_TARGET_SYSROOT/$YOCTOADT_TARGET_MACHINE_armv5e"

#armv7a-neon architecture
YOCTOADT_ROOTFS_armv7a=""
YOCTOADT_TARGET_SYSROOT_IMAGE_armv7a=""
YOCTOADT_TARGET_MACHINE_armv7a="armv7a-neon"
YOCTOADT_CROSS_CANADIAN_PACKAGEGROUP_armv7a="arm"
YOCTOADT_TARGET_SYSROOT_LOC_armv7a="$SDK_TARGET_SYSROOT/$YOCTOADT_TARGET_MACHINE_armv7a"

#cortexa5-vfp architecture
YOCTOADT_ROOTFS_cortexa5=""
YOCTOADT_TARGET_SYSROOT_IMAGE_cortexa5=""
YOCTOADT_TARGET_MACHINE_cortexa5="cortexa5-vfp"
YOCTOADT_CROSS_CANADIAN_PACKAGEGROUP_cortexa5="arm"
YOCTOADT_TARGET_SYSROOT_LOC_cortexa5="$SDK_TARGET_SYSROOT/$YOCTOADT_TARGET_MACHINE_cortexa5"

#i586 architecture
YOCTOADT_ROOTFS_i586=""
YOCTOADT_TARGET_SYSROOT_IMAGE_i586=""
YOCTOADT_TARGET_MACHINE_i586="i586"
YOCTOADT_CROSS_CANADIAN_PACKAGEGROUP_i586="x86"
YOCTOADT_TARGET_SYSROOT_LOC_i586="$SDK_TARGET_SYSROOT/$YOCTOADT_TARGET_MACHINE_i586"

#core2-32 architecture
CTOADT_ROOTFS_core2=""
YOCTOADT_TARGET_SYSROOT_IMAGE_core2=""
YOCTOADT_TARGET_MACHINE_core2="core2-32"
YOCTOADT_CROSS_CANADIAN_PACKAGEGROUP_core2="core2"
YOCTOADT_TARGET_SYSROOT_LOC_core2="$SDK_TARGET_SYSROOT/$YOCTOADT_TARGET_MACHINE_core2"


